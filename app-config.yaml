app:
  title: Backstage App by Spotify
  baseUrl: http://localhost:3000

organization:
  name: Backstage

backend:
  baseUrl: http://localhost:7007
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true

  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: better-sqlite3
    connection: ':memory:'

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers

integrations:
  # GitHub App Token to Auth
  github:
    - host: github.com
      token: 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
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

proxy:
### Example for how to add a proxy endpoint for the frontend.
### A typical reason to do this is to handle HTTPS and CORS for internal services.
# '/test':
#   target: 'https://example.com'
#   changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local' or 'docker'
    dockerImage: 'avaliasystems/techdocs'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.
    local:
      publishDirectory: './techdocs-cache'

scaffolder:
  # Override defaults
  defaultAuthor:
    name: Scaffolder
    email: scaffolder@backstage.io
  defaultCommitMessage: 'Initial commit'

# https://backstage.io/docs/features/software-catalog/
catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location, Template]
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: url
      target: https://github.com/wmpires/backstage-catalog-entities/blob/main/Group/__groups.yaml
      rules:
        - allow: [Group]
    - type: url
      target: https://github.com/wmpires/backstage-catalog-entities/blob/main/User/__users.yaml
      rules:
        - allow: [User]
    - type: url
      target: https://github.com/wmpires/backstage-catalog-entities/blob/main/System/__systems.yaml
      rules:
        - allow: [System]
    - type: url
      target: https://github.com/wmpires/backstage-app-templates/blob/main/reactjs/template.yaml
      rules:
        - allow: [ Template ]